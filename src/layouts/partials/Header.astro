---
import Logo from "@/components/Logo.astro";
import ThemeSwitcher from "@/components/ThemeSwitcher.astro";
import config from "@/config/config.json";
import menu from "@/config/menu.json";
import DynamicIcon from "@/helpers/DynamicIcon";

export interface IChildNavigationLink {
  name: string;
  url: string;
  description?: string;
  icon?: string;
}

export interface INavigationLink {
  name: string;
  url?: string;
  hasChildren?: boolean;
  children?: IChildNavigationLink[];
}

const { main }: { main: INavigationLink[] } = menu;
const { navigation_button, settings } = config;
const { pathname } = Astro.url;
---

<header class={`header z-30 ${settings.sticky_header && "sticky top-0"}`}>
  <nav class="navbar container">
    <!-- logo -->
    <div class="order-0">
      <Logo />
    </div>
    {/* navbar toggler */}
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      id="show-button"
      for="nav-toggle"
      class="order-2 mr-4 md:order-2 ml-auto flex cursor-pointer items-center text-dark dark:text-white lg:order-1 lg:hidden"
    >
      <svg class="h-5 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      id="hide-button"
      for="nav-toggle"
      class="order-1 ml-auto hidden cursor-pointer items-center text-dark dark:text-white lg:order-1 mr-4"
    >
      <svg class="h-5 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->
    <ul
      id="nav-menu"
      class="navbar-nav order-3 w-full lg:order-1 lg:flex lg:w-auto"
    >
      {
        main.map((menu) => (
          <>
            {menu.hasChildren ? (
              <li class="nav-item nav-dropdown group relative">
                <div
                  class={`nav-link inline-flex items-center ${
                    menu.children?.map(({ url }) => url).includes(pathname) ||
                    menu.children
                      ?.map(({ url }) => `${url}/`)
                      .includes(pathname)
                      ? "active"
                      : ""
                  }`}
                >
                  {menu.name}
                  <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                    <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                  </svg>
                </div>
                <ul
                  class={`nav-dropdown-list ${
                    menu?.children?.[0].description
                      ? "nav-dropdown-list-lg"
                      : ""
                  } `}
                >
                  {menu.children?.map((child) => (
                    <li class="nav-dropdown-item">
                      <a
                        href={child.url}
                        class={`nav-dropdown-link ${
                          pathname === `/${child.name + child.url}` ||
                          pathname === child.url
                            ? "text-primary dark:text-darkmode-primary"
                            : ""
                        }`}
                      >
                        {child.icon && (
                          <DynamicIcon
                            className="inline-block w-5 h-4 mr-3"
                            icon={child.icon}
                          />
                        )}
                        <span class="text-[15px]">{child.name}</span>
                        {child.description && (
                          <p class="lg:ml-8 mt-0.5 text-[13px] font-normal text-text dark:text-darkmode-text">
                            {child.description}
                          </p>
                        )}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li class="nav-item">
                <a
                  href={menu.url}
                  class={`nav-link inline-block ${
                    (pathname === `${menu.url}/` || pathname === menu.url) &&
                    "active"
                  }`}
                >
                  {menu.name}
                </a>
              </li>
            )}
          </>
        ))
      }
      {
        navigation_button.enable && (
          <li class="mt-4 inline-block lg:hidden">
            <a
              class="btn btn-outline-primary btn-sm"
              href={navigation_button.link}
            >
              {navigation_button.label}
            </a>
          </li>
        )
      }
    </ul>

    <div class="order-2 flex items-center md:order-2 lg:ml-0">
      {
        navigation_button.enable && (
          <a
            class="btn-primary btn-sm hidden lg:inline-block"
            href={navigation_button.link}
          >
            {navigation_button.label}
          </a>
        )
      }
      <ThemeSwitcher className="mr-3 lg:ml-5" />
    </div>
  </nav>
</header>

<script is:inline>
  // astro:page-load event is fired when the page is loaded
  document.addEventListener("astro:page-load", () => {
    const navLinks = document.querySelectorAll(".nav-dropdown .nav-link");
    navLinks.forEach((navlink) => {
      navlink.addEventListener("click", function () {
        this.nextElementSibling.classList.toggle("active");
      });
    });
  });
</script>
