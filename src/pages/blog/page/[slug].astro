---
import BlogCard from "@/components/BlogCard.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import DynamicIcon from "@/helpers/DynamicIcon";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { markdownify } from "@/lib/utils/textConverter";
import PageHeader from "@/partials/PageHeader.astro";
import { Image } from "astro:assets";
import { type CollectionEntry, getEntry } from "astro:content";

export async function getStaticPaths() {
  const posts = await getSinglePage("blog");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [...Array(totalPages).keys()].map((i) => ({
    params: { slug: i + 1 },
  }));

  return paths;
}

const { slug } = Astro.params;
const { blog_folder } = config.settings;

const postIndex = (await getEntry("blog", "-index")) as CollectionEntry<"blog">;
const posts = await getSinglePage("blog");
const sortedPosts = sortByDate(posts) as CollectionEntry<"blog">[];
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

const featuredPosts = posts.filter((post) => post.data.type === "featured");
---

<Base {...postIndex.data}>
  <PageHeader title={postIndex.data.title} subtitle={postIndex.data.subtitle} />

  <section class="section">
    <div class="container">
      {
        featuredPosts.map((post) => {
          const { title, author, date, description, image } = post.data;
          return (
            <div class="row gy-4 lg:gy-0">
              <div class="lg:col-6">
                {image && (
                  <Image
                    src={image}
                    class="rounded"
                    width={1600}
                    height={800}
                    alt={title}
                  />
                )}
              </div>
              <div class="lg:col-6">
                <div class="flex space-x-3 items-center mb-3">
                  <Image
                    class="inline-block rounded-full"
                    src={"/images/authors/author-1.webp"}
                    width={30}
                    height={30}
                    alt="author"
                  />

                  <p>
                    <span>by </span>
                    <a
                      href={`/${blog_folder}/${post.id}`}
                      class="text-dark dark:text-darkmode-dark hover:text-primary transition dark:hover:text-darkmode-primary"
                      set:html={markdownify(author ? author : "admin")}
                    />
                  </p>

                  <div>
                    <DynamicIcon
                      className="inline-block"
                      icon="FaRegCalendarDays"
                    />{" "}
                    {dateFormat(date!)}
                  </div>
                </div>
                <a href={`/${blog_folder}/${post.id}`}>
                  <h2
                    class="text-dark dark:text-darkmode-dark mb-3 hover:text-primary dark:hover:text-darkmode-primary"
                    set:html={markdownify(title)}
                  />
                </a>
                <p class="mb-4" set:html={markdownify(description!)} />
                <a
                  href={`/${blog_folder}/${post.id}`}
                  class="btn btn-primary capitalize"
                >
                  Read More
                </a>
              </div>
            </div>
          );
        })
      }

      <div class="row mt-12">
        {
          currentPosts.map((post) => {
            return (
              <div class="mb-14 md:col-6 lg:col-4">
                <BlogCard {...post} />
              </div>
            );
          })
        }
      </div>
      <Pagination
        section={blog_folder}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Base>
