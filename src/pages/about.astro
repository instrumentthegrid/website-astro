---
import Counter from "@/components/Counter";
import DynamicIcon from "@/helpers/DynamicIcon";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
const aboutIndex = (await getEntry(
  "about",
  "-index"
)) as CollectionEntry<"about">;
const { about, funfacts, goal, lists, office_culture, services } =
  aboutIndex.data;
---

<Base {...aboutIndex.data}>
  <section class="section">
    <div class="container">
      <div class="row gy-5 justify-between lg:gy-0 items-center">
        <div class="lg:col-6 lg:order-1 order-2">
          <div class="lg:pr-12">
            <h1 set:html={markdownify(about.title)} />
            <p class="mt-5" set:html={markdownify(about.description)} />
          </div>
        </div>
        <div class="lg:col-6 lg:order-2 order-1">
          <Image
            class="rounded max-lg:mx-auto w-full"
            width={591}
            height={359}
            src={about.image}
            alt="about-image"
          />
        </div>
      </div>
    </div>
  </section>

  <section class="section bg-theme-light dark:bg-darkmode-theme-light">
    <div class="container">
      <div class="lg:col-8 mx-auto text-center">
        <p
          class="text-dark dark:text-darkmode-dark h5"
          set:html={markdownify(goal.description)}
        />
        <Image
          class="rounded-full inline-block mt-8"
          width={100}
          height={100}
          src={goal.avatar}
          alt="author"
        />
        <h4 class="mt-3 font-bold" set:html={markdownify(goal.name)} />
        <p class="mt-1" set:html={markdownify(goal.designation)} />
      </div>
      <div class="row mt-8 lg:mt-24 gy-5 lg:gy-0">
        {
          lists.map((item) => (
            <div class="md:col-6">
              <div class="rounded bg-body dark:bg-darkmode-secondary py-12 px-6 h-full">
                <h2 class="mb-4" set:html={markdownify(item.title)} />
                <p set:html={markdownify(item.description)} />
              </div>
            </div>
          ))
        }
        <div class="lg:col-6"></div>
      </div>
    </div>
  </section>

  <section class="section bg-body dark:bg-darkmode-body">
    <div class="container">
      <h2 class="text-center mb-12"></h2>
      <div class="row g-4 lg:col-10 mx-auto">
        {
          funfacts.lists.map((item) => {
            return (
              <div class="lg:col-3 md:col-6">
                <Counter {...item} client:load />
              </div>
            );
          })
        }
      </div>
    </div>
  </section>

  <section
    class="section bg-theme-light dark:bg-darkmode-theme-light overflow-hidden"
  >
    <div class="container">
      <div class="row g-5">
        {
          services.map((service) => (
            <div class="lg:col-4 md:col-6">
              <div class="text-center bg-body dark:bg-darkmode-secondary rounded-sm shadow py-12 px-7 hover:-translate-y-1 transition">
                <div class="inline-block mb-11 bg-primary dark:bg-darkmode-primary text-body text-center rounded-sm p-3">
                  <DynamicIcon
                    className="inline-block w-8 h-8"
                    icon={service.icon}
                  />
                </div>
                <h4
                  class="font-bold mb-3"
                  set:html={markdownify(service.title)}
                />
                <p
                  class="leading-7"
                  set:html={markdownify(service.description)}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  {
    office_culture.enable && (
      <section class="section bg-body dark:bg-darkmode-body">
        <div class="container">
          <div class="row gy-4 justify-center">
            <div class="xl:col-3 lg:col-4 sm:col-6">
              <h2 set:html={markdownify(office_culture.title)} />
              <p set:html={markdownify(office_culture.content)} />
            </div>

            {office_culture.images.map((item, index) => {
              const isEven = (index + 1) % 2 === 0;
              const className = !isEven
                ? "xl:col-3 lg:col-4 sm:col-6"
                : "sm:col-6";

              return (
                <div class={`${className}`}>
                  <img
                    class="rounded-sm w-full h-full object-cover"
                    width={500}
                    height={500}
                    src={item.image}
                    alt="office-culture-image"
                  />
                </div>
              );
            })}

            <div class="xl:col-5 lg:col-10 self-center mx-auto">
              <div>
                <h2
                  class="mb-4"
                  set:html={markdownify(office_culture.join_our_team.title)}
                />
                <p
                  class="mb-3"
                  set:html={markdownify(office_culture.join_our_team.content)}
                />
                {office_culture.join_our_team.button.enable && (
                  <a
                    href={office_culture.join_our_team.button.link}
                    class="btn flex-none inline-block btn-outline-primary text-center"
                  >
                    {office_culture.join_our_team.button.label}
                  </a>
                )}
              </div>
            </div>
          </div>
        </div>
      </section>
    )
  }
</Base>
